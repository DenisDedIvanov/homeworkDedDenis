'''
1. Git - это СКВ (система контроля версий). Данная система отслеживает все правки в файлы и синхранизовывает их с соновной версией файла. Система хранит историю изменений и все правки по проекту. Разработчик создает свой
локальный репозиторий, в котором может работать с нужным файлом. После правок можно сохранить изменения в основном проекте. История изменений хранится в самом проекте. А Github- софт, который позволяет наглядно пользоваться Gitом. Есть аналоги, со схожим функционалом.
2.  СКВ сохраняет все версии и правки в проекте. Поэтому изменения легко контролировать. Это особенно актульно в проектах с открытым исходным кодом. Разрабы будут пропускать только полезные изменения.
3. clone - создание локального репозитория
   commit - локальное сохранение изменений
   push - загрузка изменений в удаленный репозиторий
   pull - подтягивание изменений из удаленного репозитория на локальный
   discard - сбросить изменения
4. Пусть есть забагованная программа. Мы не знаем, где конкретно сидит баг. Чтобы правильной найти ошибку, следует использовать ветки. Имеется главная ветка проекта. Мы создаем ветку багов и проверяем каждый commit на баги. После нахождения и исправления ошибки
делаем слияние ветки багов с главной веткой
5. Merge и rebase - это инструменты, позволяющие добавить свои comitы в основную ветку проекта, но по-разному. Merge (слияние) позволяет отследить реальную историю изменений проекта и можно посмотреть кто конкретно совершил изменение. 
   Rebase (перебазирование) - мы видим основные идеи разных веток изменения, и при этом история commitов выглядит понятно и доступно. Минус заключается в том, чт мы не видим реальную историю разработки и не можем отследить кто и когда сделал изменение.
 

   
6. Централизованная СКВ: хранит файлы в актуальном состоянии, хранит историю изменений. Есть сервер, который отвечает за всю синхронизацию. С ним в постоянном контакте находятся разные версии одного файла и главный файл обновляется все время.
Как пример гугл-документы.
Децентрализованная СКВ: никто не является главным, у каждого есть своя локальная копия файла, если сервер будет выведен из строя, то можно продолжать работать со своей копией файла. Удаленный и локальные репозитории связаны и могут быть синхронизированны
друг с другом.

'''
