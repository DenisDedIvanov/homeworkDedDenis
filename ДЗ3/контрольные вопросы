##### Как расшифровывается ООП, в чем суть отличия от процедурного и функционального программирования?

ООП- объектно ориентированное програмирование. Основная структура ООП- объект. Программа представляется в виде совокупности объектов,
каждый из которых является экземпляром определённого класса. В отличии от процедурного метода, в ООП код разбит на отдельные фрагменты и
не идет сплошным текстом. В функциональном програмировании конечно уже есть отдельные куски программы- функции, но
помимо функций создаются объекты, которые включают в себя эти функции применительно к конкретным данным.

##### В чем заключается идея инкапсуляции, как она реализуется в Python?

Инкапсуляция — ограничение доступа к составляющим объект компонентам (методам и переменным). Инкапсуляция делает некоторые из компонент 
доступными только внутри класса. В питоне она имеет свои особенности. Сам язык предоставляет пользователю синтаксический инструмент, который 
может обойти инкапсуляцию. Читать и изменять частные переменные и вызывать частные функции все же возможно, в отличии от других языков програмирования. 
Есть договренность о том, что перемнные, относящиеся к реализации, в начале имют нижнее подчеркивание. Но это лишь условность. Поэтому пользователь
должен самостоятельно заботиться о ее сохранении.

##### Как называются переменные и функции, принадлежащие экземпляру класса?

Переменные называют полями или атрибутами, а функции - методами.

##### Что такое инициализатор класса и чем он отличается от конструктора?

Инициализатор- это функция прописанная в реализации класса, которая запускается автоматически при обозначении вновь введённой переменной принадлежащей 
этому классу. Инициализатор позволяет получить уже полностью настроенный экземпляр. Он запускается на объекте после конструктора и может использоваться 
для набора любого количества полей объекта на указанные значения. 
Конструктором класса называют метод, который автоматически вызывается при создании объектов. По сути, это функция для выделения памяти, которая прописана 
в реализации класса. В питоне его не прописывают, констурктор выполяется автоматически, то есть он вшит в питон.
